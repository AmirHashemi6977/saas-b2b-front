{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/Saas_B2B%20Project/Front/saas-b2b-front/src/i18n/routing.ts"],"sourcesContent":["import { defineRouting } from \"next-intl/routing\";\r\n\r\nexport const routing = defineRouting({\r\n  // A list of all locales that are supported\r\n  locales: [\"fa\", \"en\", \"hy\"] as const,\r\n\r\n  // Used when no locale matches\r\n  defaultLocale: \"fa\",\r\n});\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,UAAU,CAAA,GAAA,kOAAA,CAAA,gBAAa,AAAD,EAAE;IACnC,2CAA2C;IAC3C,SAAS;QAAC;QAAM;QAAM;KAAK;IAE3B,8BAA8B;IAC9B,eAAe;AACjB","debugId":null}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":["file:///E:/Saas_B2B%20Project/Front/saas-b2b-front/src/app/components/themeProviderClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/themeProviderClient.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/themeProviderClient.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8S,GAC3U,4EACA","debugId":null}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":["file:///E:/Saas_B2B%20Project/Front/saas-b2b-front/src/app/components/themeProviderClient.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/themeProviderClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/themeProviderClient.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0R,GACvT,wDACA","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///E:/Saas_B2B%20Project/Front/saas-b2b-front/src/app/%5Blocale%5D/layout.tsx"],"sourcesContent":["import { NextIntlClientProvider, hasLocale } from \"next-intl\";\r\nimport { notFound } from \"next/navigation\";\r\nimport { routing } from \"i18n/routing\";\r\nimport \"../globals.css\";\r\nimport ThemeProviderClient from \"../components/themeProviderClient\";\r\n\r\nexport default async function LocaleLayout({\r\n  children,\r\n  params,\r\n}: {\r\n  children: React.ReactNode;\r\n  params: Promise<{ locale: string }>;\r\n}) {\r\n  // Ensure that the incoming `locale` is valid\r\n  const { locale } = await params;\r\n  if (!hasLocale(routing.locales, locale)) {\r\n    notFound();\r\n  }\r\n  console.log(\"locale\", locale);\r\n  return (\r\n    <html lang={locale} dir={locale === \"fa\" ? \"rtl\" : \"ltr\"}>\r\n      <body>\r\n        <ThemeProviderClient locale={locale}>{children}</ThemeProviderClient>\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AAAA;AACA;AAEA;;;;;;;AAEe,eAAe,aAAa,EACzC,QAAQ,EACR,MAAM,EAIP;IACC,6CAA6C;IAC7C,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,IAAI,CAAC,CAAA,GAAA,iLAAA,CAAA,YAAS,AAAD,EAAE,sHAAA,CAAA,UAAO,CAAC,OAAO,EAAE,SAAS;QACvC,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD;IACT;IACA,QAAQ,GAAG,CAAC,UAAU;IACtB,qBACE,8OAAC;QAAK,MAAM;QAAQ,KAAK,WAAW,OAAO,QAAQ;kBACjD,cAAA,8OAAC;sBACC,cAAA,8OAAC,gJAAA,CAAA,UAAmB;gBAAC,QAAQ;0BAAS;;;;;;;;;;;;;;;;AAI9C","debugId":null}}]
}