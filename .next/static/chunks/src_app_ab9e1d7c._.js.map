{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///E:/Saas_B2B%20Project/Front/saas-b2b-front/src/app/theme/theme.ts"],"sourcesContent":["// src/theme/theme.ts\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\nexport const lightTheme = createTheme({\r\n  palette: {\r\n    mode: \"light\",\r\n    primary: {\r\n      main: \"#2563eb\",\r\n    },\r\n    secondary: {\r\n      main: \"#f59e0b\",\r\n    },\r\n    background: {\r\n      default: \"#ffffff\",\r\n      paper: \"#f5f5f5\",\r\n    },\r\n    text: {\r\n      primary: \"#171717\",\r\n      secondary: \"#555555\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"IranSans\", Arial, sans-serif',\r\n  },\r\n});\r\n\r\nexport const darkTheme = createTheme({\r\n  palette: {\r\n    mode: \"dark\",\r\n    primary: {\r\n      main: \"#90caf9\",\r\n    },\r\n    secondary: {\r\n      main: \"#f59e0b\",\r\n    },\r\n    background: {\r\n      default: \"#121212\",\r\n      paper: \"#1d1d1d\",\r\n    },\r\n    text: {\r\n      primary: \"#ededed\",\r\n      secondary: \"#bbbbbb\",\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: '\"IranSans\", Arial, sans-serif',\r\n  },\r\n});\r\n"],"names":[],"mappings":"AAAA,qBAAqB;;;;;AACrB;;AAEO,MAAM,aAAa,CAAA,GAAA,8MAAA,CAAA,cAAW,AAAD,EAAE;IACpC,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;QACA,YAAY;YACV,SAAS;YACT,OAAO;QACT;QACA,MAAM;YACJ,SAAS;YACT,WAAW;QACb;IACF;IACA,YAAY;QACV,YAAY;IACd;AACF;AAEO,MAAM,YAAY,CAAA,GAAA,8MAAA,CAAA,cAAW,AAAD,EAAE;IACnC,SAAS;QACP,MAAM;QACN,SAAS;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;QACA,YAAY;YACV,SAAS;YACT,OAAO;QACT;QACA,MAAM;YACJ,SAAS;YACT,WAAW;QACb;IACF;IACA,YAAY;QACV,YAAY;IACd;AACF","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///E:/Saas_B2B%20Project/Front/saas-b2b-front/src/app/components/themeProviderClient.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { ReactNode, useEffect, useState } from \"react\";\r\nimport { ThemeProvider, CssBaseline, useMediaQuery } from \"@mui/material\";\r\nimport { lightTheme, darkTheme } from \"../theme/theme\";\r\nimport { NextIntlClientProvider } from \"next-intl\";\r\n\r\ninterface ThemeProviderClientProps {\r\n  children: ReactNode;\r\n  locale: string;\r\n}\r\n\r\nexport default function ThemeProviderClient({\r\n  children,\r\n  locale,\r\n}: ThemeProviderClientProps) {\r\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\r\n  const [isDark, setIsDark] = useState(prefersDarkMode);\r\n\r\n  const theme = isDark ? darkTheme : lightTheme;\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <NextIntlClientProvider locale={locale} messages={{}}>\r\n        {children}\r\n      </NextIntlClientProvider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AALA;;;;;AAYe,SAAS,oBAAoB,EAC1C,QAAQ,EACR,MAAM,EACmB;;IACzB,MAAM,kBAAkB,CAAA,GAAA,iNAAA,CAAA,gBAAa,AAAD,EAAE;IACtC,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAErC,MAAM,QAAQ,SAAS,+HAAA,CAAA,YAAS,GAAG,+HAAA,CAAA,aAAU;IAE7C,qBACE,6LAAC,kNAAA,CAAA,gBAAa;QAAC,OAAO;;0BACpB,6LAAC,mNAAA,CAAA,cAAW;;;;;0BACZ,6LAAC,sPAAA,CAAA,yBAAsB;gBAAC,QAAQ;gBAAQ,UAAU,CAAC;0BAChD;;;;;;;;;;;;AAIT;GAjBwB;;QAIE,iNAAA,CAAA,gBAAa;;;KAJf","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///E:/Saas_B2B%20Project/Front/saas-b2b-front/src/app/components/themeContex.tsx"],"sourcesContent":["\"use client\";\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\n// نوع تم‌ها\r\ntype ThemeMode = \"light\" | \"dark\";\r\n\r\ninterface ThemeContextType {\r\n  mode: ThemeMode;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\r\n\r\nexport const useThemeMode = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useThemeMode must be used within a ThemeContextProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeContextProvider = ({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [mode, setMode] = useState<ThemeMode>(\"light\");\r\n\r\n  // خواندن تم از localStorage\r\n  useEffect(() => {\r\n    const storedTheme = localStorage.getItem(\"theme\") as ThemeMode | null;\r\n    if (storedTheme) {\r\n      setMode(storedTheme);\r\n    } else {\r\n      const prefersDarkMode = window.matchMedia(\r\n        \"(prefers-color-scheme: dark)\"\r\n      ).matches;\r\n      setMode(prefersDarkMode ? \"dark\" : \"light\");\r\n    }\r\n  }, []);\r\n\r\n  // تغییر تم\r\n  const toggleTheme = () => {\r\n    setMode((prevMode) => {\r\n      const newMode = prevMode === \"light\" ? \"dark\" : \"light\";\r\n      localStorage.setItem(\"theme\", newMode); // ذخیره تم در localStorage\r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ mode, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n"],"names":[],"mappings":";;;;;AACA;;;AADA;;AAWA,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,MAAM,eAAe;;IAC1B,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAQN,MAAM,uBAAuB,CAAC,EACnC,QAAQ,EAGT;;IACC,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa;IAE5C,4BAA4B;IAC5B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,MAAM,cAAc,aAAa,OAAO,CAAC;YACzC,IAAI,aAAa;gBACf,QAAQ;YACV,OAAO;gBACL,MAAM,kBAAkB,OAAO,UAAU,CACvC,gCACA,OAAO;gBACT,QAAQ,kBAAkB,SAAS;YACrC;QACF;yCAAG,EAAE;IAEL,WAAW;IACX,MAAM,cAAc;QAClB,QAAQ,CAAC;YACP,MAAM,UAAU,aAAa,UAAU,SAAS;YAChD,aAAa,OAAO,CAAC,SAAS,UAAU,2BAA2B;YACnE,OAAO;QACT;IACF;IAEA,qBACE,6LAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAM;QAAY;kBAC/C;;;;;;AAGP;IAlCa;KAAA","debugId":null}}]
}